{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/cartActions.js","components/cart/CartSummary.js","components/nav/NavBar.js","redux/actions/categoryActions.js","redux/actions/productActions.js","components/categories/CategoryList.js","components/products/ProductList.js","components/root/Dashboard.js","components/cart/CartDetail.js","components/common/NotFound.js","components/root/App.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/changeCategoryReducer.js","redux/reducers/categoryListReducer.js","redux/reducers/productListReducer.js","redux/reducers/cartReducer.js","index.js","redux/reducers/configureStore.js"],"names":["CHANGE_CATEGORY","GET_CATEGORIES_SUCCESS","GET_PRODUCTS_SUCCESS","ADD_TO_CART","REMOVE_FROM_CART","addToCart","cartItem","type","actionTypes","payload","removeFromCart","product","CartSummary","this","props","actions","alertify","error","productName","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","class","DropdownMenu","right","cart","map","DropdownItem","className","Badge","color","onClick","quantity","id","divider","to","length","renderSummary","renderEmpty","Component","connect","state","dispatch","bindActionCreators","cartActions","NavBar","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","changeCategory","category","getCategories","fetch","then","response","json","result","getProducts","categoryId","url","data","console","log","CategoryList","ListGroup","categories","ListGroupItem","active","currentCategory","selectCategory","categoryName","categoriesArray","categoryActions","productActions","ProductList","success","Container","Table","products","scope","unitPrice","quantityPerUnit","unitsInStock","Button","Dashboard","Row","Col","xs","CartDetail","NotFound","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","savedProduct","rootReducer","combineReducers","action","addedItem","find","item","newState","Object","assign","filter","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75c18137.chunk.js","sourcesContent":["export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\n\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport function addToCart(cartItem) {\n  return { type: actionTypes.ADD_TO_CART, payload: cartItem };\n}\n\nexport function removeFromCart(product) {\n  return { type: actionTypes.REMOVE_FROM_CART, payload: product };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as cartActions from \"../../redux/actions/cartActions\";\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavItem,\n  NavLink,\n  Badge,\n} from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { Link } from \"react-router-dom\";\nimport alertify from \"alertifyjs\";\n\nclass CartSummary extends Component {\n  removeFromCart(product) {\n    this.props.actions.removeFromCart(product);\n    alertify.error(product.productName + \" has been removed from the cart\");\n  }\n\n  renderEmpty() {\n    return (\n      <NavItem>\n        <NavLink>Your cart is empty</NavLink>\n      </NavItem>\n    );\n  }\n\n  renderSummary() {\n    return (\n      <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav caret>\n          Cart Details\n          <i class=\"fa fa-shopping-cart fs-4  text-primary ms-2\"></i>\n        </DropdownToggle>\n        <DropdownMenu right>\n          {this.props.cart.map((cartItem) => (\n            <DropdownItem\n              key={cartItem.product.id}\n              className=\"d-flex justify-content-between\"\n            >\n              <div>\n                <Badge\n                  color=\"danger\"\n                  className=\"bg-danger me-2\"\n                  onClick={() => this.removeFromCart(cartItem.product)}\n                >\n                  X\n                </Badge>\n                {cartItem.product.productName}\n              </div>\n              <Badge color=\"primary\" className=\"bg-primary\">\n                {cartItem.quantity}\n              </Badge>\n            </DropdownItem>\n          ))}\n\n          <DropdownItem divider />\n          <DropdownItem>\n            <Link to=\"/cart\">Go To The Cart</Link>\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.cart.length > 0 ? this.renderSummary() : this.renderEmpty()}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      removeFromCart: bindActionCreators(cartActions.removeFromCart, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartSummary);\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport CartSummary from \"../cart/CartSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand>\n          <Link to=\"/online-store/\">My Web Shop</Link>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink>\n                {/* <Link to=\"/saveproduct/\">Add Product</Link> */}\n              </NavLink>\n            </NavItem>\n\n            <CartSummary></CartSummary>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import * as actionTypes from \"./actionTypes\";\n\nexport function changeCategory(category) {\n  return { type: actionTypes.CHANGE_CATEGORY, payload: category };\n}\n\nexport function getCategoriesSuccess(categories) {\n  return { type: actionTypes.GET_CATEGORIES_SUCCESS, payload: categories };\n}\n\nexport function getCategories() {\n  return function (dispatch) {\n    // let url = \"http://localhost:3000/categories\";\n    let url =\n      \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-categories/incoming_webhook/webhook-get-categories\";\n    return fetch(url)\n      .then((response) => response.json())\n      .then((result) => dispatch(getCategoriesSuccess(result)));\n  };\n}\n","import * as actionTypes from \"./actionTypes\";\n\nexport function getProductSuccess(products) {\n  return { type: actionTypes.GET_PRODUCTS_SUCCESS, payload: products };\n}\n\nexport function createProductSuccess(product) {\n  return { type: actionTypes.CREATE_PRODUCT_SUCCESS, payload: product };\n}\n\nexport function updateProductSuccess(prodcut) {\n  return { type: actionTypes.UPDATE_PRODUCT_SUCCESS, payload: prodcut };\n}\n\nexport function getProducts(categoryId) {\n  return function (dispatch) {\n    let url =\n      \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-products/incoming_webhook/webhook-get-products\";\n    if (categoryId) {\n      url += \"?categoryId=\" + categoryId;\n    }\n    return fetch(url)\n      .then((response) => {\n        let data = response.json();\n        console.log(data);\n        return data;\n      })\n      .then((result) => {\n        console.log(result);\n        return dispatch(getProductSuccess(result));\n      });\n  };\n}\n\nexport async function handleResponse(response) {\n  if (response.ok) {\n    return response.json();\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\n\nexport function handleError(error) {\n  throw error;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Badge, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport * as productActions from \"../../redux/actions/productActions\";\n\nclass CategoryList extends Component {\n  componentDidMount() {\n    this.props.actions.getCategories();\n    // console.log(this.props.categories);\n  }\n\n  selectCategory(category) {\n    this.props.actions.changeCategory(category);\n    this.props.actions.getProducts(category.id);\n  }\n\n  render() {\n    return (\n      <div className=\"m-1\">\n        <h3>\n          <Badge className=\"badge bg-warning text-dark\">Categories</Badge>\n        </h3>\n        <ListGroup>\n          {this.props.categories.map((category) => (\n            <ListGroupItem\n              active={category.id === this.props.currentCategory.id}\n              // onClick={() => this.props.actions.changeCategory(category)}\n              onClick={() => this.selectCategory(category)}\n              key={category.id}\n            >\n              {category.categoryName}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.currentCategory,\n    categories: state.categoriesArray,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getCategories: bindActionCreators(\n        categoryActions.getCategories,\n        dispatch\n      ),\n      changeCategory: bindActionCreators(\n        categoryActions.changeCategory,\n        dispatch\n      ),\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Badge, Button, Container, Table } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as productActions from \"../../redux/actions/productActions\";\nimport * as cartActions from \"../../redux/actions/cartActions\";\nimport alertify from \"alertifyjs\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductList extends Component {\n  componentDidMount() {\n    this.props.actions.getProducts();\n  }\n\n  addToCart = (product) => {\n    this.props.actions.addToCart({ quantity: 1, product });\n    alertify.success(product.productName + \" has been added to cart\");\n  };\n\n  render() {\n    return (\n      <Container className=\"m-1 \">\n        <h3>\n          <Badge color=\"warning\" className=\"badge bg-warning text-dark me-3\">\n            Products\n          </Badge>\n          <Badge color=\"success\" className=\"badge bg-success\">\n            {this.props.currentCategory.categoryName}\n          </Badge>\n        </h3>\n\n        <div className=\"\">\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Product Name</th>\n                <th>Unit Price</th>\n                <th>Quantity Per Unit</th>\n                <th>Units In Stock</th>\n                <th>Add to Cart</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.products.map((product) => (\n                <tr key={product.id}>\n                  <th scope=\"row\">{product.id}</th>\n                  <td>\n                    <Link to={\"/saveproduct/\" + product.id}>\n                      {product.productName}\n                    </Link>\n                  </td>\n                  <td>{product.unitPrice}</td>\n                  <td>{product.quantityPerUnit}</td>\n                  <td>{product.unitsInStock}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.addToCart(product)}\n                    >\n                      +\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.currentCategory,\n    products: state.products,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\n      addToCart: bindActionCreators(cartActions.addToCart, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\n","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport CategoryList from \"../categories/CategoryList\";\nimport ProductList from \"../products/ProductList\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"3\">\n            <CategoryList></CategoryList>\n          </Col>\n          <Col xs=\"9\">\n            <ProductList></ProductList>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Button } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport alertify from \"alertifyjs\";\nimport * as cartActions from \"../../redux/actions/cartActions\";\n\nclass CartDetail extends Component {\n  removeFromCart(product) {\n    this.props.actions.removeFromCart(product);\n    alertify.error(product.productName + \" has been removed from the cart\");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Your Cart</h1>\n        <div className=\"\">\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Product Name</th>\n                <th>Unit Price</th>\n                <th>Quantity </th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.cart.map((cartItem) => (\n                <tr key={cartItem.id}>\n                  <th scope=\"row\">{cartItem.product.id}</th>\n                  <td>{cartItem.product.productName}</td>\n                  <td>{cartItem.product.unitPrice}</td>\n                  <td>{cartItem.quantity}</td>\n                  <td>\n                    <Button\n                      color=\"danger\"\n                      onClick={() => this.removeFromCart(cartItem.product)}\n                    >\n                      X\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      removeFromCart: bindActionCreators(cartActions.removeFromCart, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDetail);\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"mt-5 text-center\">\n        <h2 className=\"my-5\">Page Not Found</h2>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport NavBar from \"../nav/NavBar\";\nimport Dashboard from \"../root/Dashboard\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CartDetail from \"../cart/CartDetail\";\n// import AddOrUpdateProduct from \"../products/AddOrUpdateProduct\";\nimport NotFound from \"../common/NotFound\";\n\nfunction App() {\n  return (\n    <Container className=\"p-2\">\n      <Row className=\"m-1\">\n        <NavBar></NavBar>\n      </Row>\n      <Row className=\"m-1\">\n        <Switch>\n          <Route path=\"/\" exact component={Dashboard}></Route>\n          <Route path=\"/products\" exact component={Dashboard}></Route>\n          <Route path=\"/cart\" exact component={CartDetail}></Route>\n          {/* <Route\n            path=\"/saveproduct/:productId\"\n            component={AddOrUpdateProduct}\n          ></Route> */}\n          {/* <Route path=\"/saveproduct/\" component={AddOrUpdateProduct}></Route> */}\n          <Route path=\"/online-store/\" exact component={Dashboard}></Route>\n          {/* <Route\n            path=\"/online-store/products\"\n            exact\n            component={Dashboard}\n          ></Route>\n          <Route path=\"/online-store/cart\" exact component={CartDetail}></Route>\n          <Route\n            path=\"/online-store/saveproduct/:productId\"\n            component={AddOrUpdateProduct}\n          ></Route>\n          <Route\n            path=\"/online-store/saveproduct/\"\n            component={AddOrUpdateProduct}\n          ></Route> */}\n          <Route exact component={NotFound}></Route>\n        </Switch>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n  currentCategory: { categoryName: \"Empty\" },\n  categories: [],\n  products: [],\n  cart: [],\n  savedProduct: {},\n};\n","import { combineReducers } from \"redux\";\nimport changeCategoryReducer from \"./changeCategoryReducer\";\nimport categoryListReducer from \"./categoryListReducer\";\nimport productListReducer from \"./productListReducer\";\nimport cartReducer from \"./cartReducer\";\n\nconst rootReducer = combineReducers({\n  currentCategory: changeCategoryReducer,\n  categoriesArray: categoryListReducer,\n  products: productListReducer,\n  cart: cartReducer,\n});\n\nexport default rootReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function changeCategoryReducer(\n  state = initialState.currentCategory,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.CHANGE_CATEGORY:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function categoryListReducer(\n  state = initialState.categories,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.GET_CATEGORIES_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function productListReducer(\n  state = initialState.products,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.GET_PRODUCTS_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function cartReducer(state = initialState.cart, action) {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      let addedItem = state.find(\n        (item) => item.product.id === action.payload.product.id\n      );\n      if (addedItem) {\n        const newState = state.map((cartItem) => {\n          if (cartItem.product.id === action.payload.product.id) {\n            return Object.assign({}, addedItem, {\n              quantity: addedItem.quantity + 1,\n            });\n          }\n          return cartItem;\n        });\n        return newState;\n      } else {\n        return [...state, { ...action.payload }];\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      const newState = state.filter(\n        (cartItem) => cartItem.product.id !== action.payload.id\n      );\n      return newState;\n\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/root/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport \"../node_modules/reactstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/alertifyjs/build/css/alertify.min.css\";\nimport \"../node_modules/alertifyjs/build/alertify.min.js\";\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/reducers/configureStore\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport rootReducer from \"./index\";\nimport thunk from \"redux-thunk\";\n\nexport default function configureStore() {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n}\n"],"sourceRoot":""}