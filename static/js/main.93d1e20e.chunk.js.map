{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/cartActions.js","components/cart/CartSummary.js","components/nav/NavBar.js","redux/actions/categoryActions.js","redux/actions/productActions.js","components/categories/CategoryList.js","components/products/ProductList.js","components/root/Dashboard.js","components/cart/CartDetail.js","components/toolbox/TextInput.js","components/toolbox/SelectInput.js","components/products/ProductDetail.js","components/products/AddOrUpdateProduct.js","components/common/NotFound.js","components/root/App.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/changeCategoryReducer.js","redux/reducers/categoryListReducer.js","redux/reducers/productListReducer.js","redux/reducers/cartReducer.js","redux/reducers/saveProductReducer.js","index.js","redux/reducers/configureStore.js"],"names":["CHANGE_CATEGORY","GET_CATEGORIES_SUCCESS","GET_PRODUCTS_SUCCESS","CREATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_SUCCESS","ADD_TO_CART","REMOVE_FROM_CART","addToCart","cartItem","type","actionTypes","payload","removeFromCart","product","CartSummary","this","props","actions","alertify","error","productName","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","class","DropdownMenu","right","cart","map","DropdownItem","className","Badge","color","onClick","quantity","id","divider","to","length","renderSummary","renderEmpty","Component","connect","state","dispatch","bindActionCreators","cartActions","NavBar","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","changeCategory","category","getCategories","fetch","then","response","json","result","getProducts","categoryId","url","handleResponse","a","ok","text","Error","handleError","CategoryList","ListGroup","categories","ListGroupItem","active","currentCategory","selectCategory","categoryName","categoriesArray","categoryActions","productActions","ProductList","success","Container","Table","products","scope","unitPrice","quantityPerUnit","unitsInStock","Button","Dashboard","Row","Col","xs","CartDetail","TextInput","name","label","onChange","placeHolder","value","wrapperClass","htmlFor","placeholder","SelectInput","defaultOption","options","option","ProductDetail","onSave","errors","onSubmit","mapDispatchToProps","saveProduct","method","headers","body","JSON","stringify","catch","saveProductApi","savedProduct","createProductSuccess","ownProps","productId","match","params","find","getProductById","history","setProduct","setErrors","useEffect","event","target","previousProduct","parseInt","previousErrors","validate","preventDefault","push","NotFound","App","path","exact","component","AddOrUpdateProduct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","addedItem","item","newState","Object","assign","filter","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93d1e20e.chunk.js","sourcesContent":["export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\n\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport function addToCart(cartItem) {\n  return { type: actionTypes.ADD_TO_CART, payload: cartItem };\n}\n\nexport function removeFromCart(product) {\n  return { type: actionTypes.REMOVE_FROM_CART, payload: product };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as cartActions from \"../../redux/actions/cartActions\";\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavItem,\n  NavLink,\n  Badge,\n} from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { Link } from \"react-router-dom\";\nimport alertify from \"alertifyjs\";\n\nclass CartSummary extends Component {\n  removeFromCart(product) {\n    this.props.actions.removeFromCart(product);\n    alertify.error(product.productName + \" has been removed from the cart\");\n  }\n\n  renderEmpty() {\n    return (\n      <NavItem>\n        <NavLink>Your cart is empty</NavLink>\n      </NavItem>\n    );\n  }\n\n  renderSummary() {\n    return (\n      <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav caret>\n          Cart Details\n          <i class=\"fa fa-shopping-cart fs-4  text-primary ms-2\"></i>\n        </DropdownToggle>\n        <DropdownMenu right>\n          {this.props.cart.map((cartItem) => (\n            <DropdownItem\n              key={cartItem.product.id}\n              className=\"d-flex justify-content-between\"\n            >\n              <div>\n                <Badge\n                  color=\"danger\"\n                  className=\"bg-danger me-2\"\n                  onClick={() => this.removeFromCart(cartItem.product)}\n                >\n                  X\n                </Badge>\n                {cartItem.product.productName}\n              </div>\n              <Badge color=\"primary\" className=\"bg-primary\">\n                {cartItem.quantity}\n              </Badge>\n            </DropdownItem>\n          ))}\n\n          <DropdownItem divider />\n          <DropdownItem>\n            <Link to=\"/cart\">Go To The Cart</Link>\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.cart.length > 0 ? this.renderSummary() : this.renderEmpty()}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      removeFromCart: bindActionCreators(cartActions.removeFromCart, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartSummary);\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport CartSummary from \"../cart/CartSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand>\n          <Link to=\"/\">My Web Shop</Link>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink>\n                <Link to=\"/saveproduct/\">Add Product</Link>\n              </NavLink>\n            </NavItem>\n\n            <CartSummary></CartSummary>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import * as actionTypes from \"./actionTypes\";\n\nexport function changeCategory(category) {\n  return { type: actionTypes.CHANGE_CATEGORY, payload: category };\n}\n\nexport function getCategoriesSuccess(categories) {\n  return { type: actionTypes.GET_CATEGORIES_SUCCESS, payload: categories };\n}\n\nexport function getCategories() {\n  return function (dispatch) {\n    // let url = \"http://localhost:3000/categories\";\n    let url =\n      \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-categories/incoming_webhook/webhook-get-categories\";\n    return fetch(url)\n      .then((response) => response.json())\n      .then((result) => dispatch(getCategoriesSuccess(result)));\n  };\n}\n","import * as actionTypes from \"./actionTypes\";\n\nexport function getProductSuccess(products) {\n  return { type: actionTypes.GET_PRODUCTS_SUCCESS, payload: products };\n}\n\nexport function createProductSuccess(product) {\n  return { type: actionTypes.CREATE_PRODUCT_SUCCESS, payload: product };\n}\n\nexport function updateProductSuccess(prodcut) {\n  return { type: actionTypes.UPDATE_PRODUCT_SUCCESS, payload: prodcut };\n}\n\nexport function saveProductApi(product) {\n  return fetch(\"http://localhost:3000/products/\" + (product.id || \"\"), {\n    method: product.id ? \"PUT\" : \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(product),\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveProduct(product) {\n  return function (dispatch) {\n    return saveProductApi(product)\n      .then((savedProduct) => {\n        product.id\n          ? dispatch(updateProductSuccess(savedProduct))\n          : dispatch(createProductSuccess(savedProduct));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n}\n\nexport function getProducts(categoryId) {\n  return function (dispatch) {\n    let url =\n      \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-products/incoming_webhook/webhook-get-products\";\n    if (categoryId) {\n      url += \"?categoryId=\" + categoryId;\n    }\n    return fetch(url)\n      .then((response) => response.json())\n      .then((result) => dispatch(getProductSuccess(result)));\n  };\n}\n\nexport async function handleResponse(response) {\n  if (response.ok) {\n    return response.json();\n  }\n\n  const error = await response.text();\n  throw new Error(error);\n}\n\nexport function handleError(error) {\n  throw error;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Badge, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport * as productActions from \"../../redux/actions/productActions\";\n\nclass CategoryList extends Component {\n  componentDidMount() {\n    this.props.actions.getCategories();\n    // console.log(this.props.categories);\n  }\n\n  selectCategory(category) {\n    this.props.actions.changeCategory(category);\n    this.props.actions.getProducts(category.id);\n  }\n\n  render() {\n    return (\n      <div className=\"border border-1 border-info m-1\">\n        <h3>\n          <Badge className=\"badge bg-warning text-dark\">Categories</Badge>\n        </h3>\n        <ListGroup>\n          {this.props.categories.map((category) => (\n            <ListGroupItem\n              active={category.id === this.props.currentCategory.id}\n              // onClick={() => this.props.actions.changeCategory(category)}\n              onClick={() => this.selectCategory(category)}\n              key={category.id}\n            >\n              {category.categoryName}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.currentCategory,\n    categories: state.categoriesArray,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getCategories: bindActionCreators(\n        categoryActions.getCategories,\n        dispatch\n      ),\n      changeCategory: bindActionCreators(\n        categoryActions.changeCategory,\n        dispatch\n      ),\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Badge, Button, Container, Table } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as productActions from \"../../redux/actions/productActions\";\nimport * as cartActions from \"../../redux/actions/cartActions\";\nimport alertify from \"alertifyjs\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductList extends Component {\n  componentDidMount() {\n    this.props.actions.getProducts();\n  }\n\n  addToCart = (product) => {\n    this.props.actions.addToCart({ quantity: 1, product });\n    alertify.success(product.productName + \" has been added to cart\");\n  };\n\n  render() {\n    return (\n      <Container className=\"border border-1 border-success m-1 \">\n        <h3>\n          <Badge color=\"warning\" className=\"badge bg-warning text-dark me-3\">\n            Products\n          </Badge>\n          <Badge color=\"success\" className=\"badge bg-success\">\n            {this.props.currentCategory.categoryName}\n          </Badge>\n        </h3>\n\n        <div className=\"\">\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Product Name</th>\n                <th>Unit Price</th>\n                <th>Quantity Per Unit</th>\n                <th>Units In Stock</th>\n                <th>Add to Cart</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.products.map((product) => (\n                <tr key={product.id}>\n                  <th scope=\"row\">{product.id}</th>\n                  <td>\n                    <Link to={\"/saveproduct/\" + product.id}>\n                      {product.productName}\n                    </Link>\n                  </td>\n                  <td>{product.unitPrice}</td>\n                  <td>{product.quantityPerUnit}</td>\n                  <td>{product.unitsInStock}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.addToCart(product)}\n                    >\n                      +\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.currentCategory,\n    products: state.products,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\n      addToCart: bindActionCreators(cartActions.addToCart, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\n","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport CategoryList from \"../categories/CategoryList\";\nimport ProductList from \"../products/ProductList\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"3\">\n            <CategoryList></CategoryList>\n          </Col>\n          <Col xs=\"9\">\n            <ProductList></ProductList>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Button } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport alertify from \"alertifyjs\";\nimport * as cartActions from \"../../redux/actions/cartActions\";\n\nclass CartDetail extends Component {\n  removeFromCart(product) {\n    this.props.actions.removeFromCart(product);\n    alertify.error(product.productName + \" has been removed from the cart\");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Your Cart</h1>\n        <div className=\"\">\n          <Table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Product Name</th>\n                <th>Unit Price</th>\n                <th>Quantity </th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.cart.map((cartItem) => (\n                <tr key={cartItem.id}>\n                  <th scope=\"row\">{cartItem.product.id}</th>\n                  <td>{cartItem.product.productName}</td>\n                  <td>{cartItem.product.unitPrice}</td>\n                  <td>{cartItem.quantity}</td>\n                  <td>\n                    <Button\n                      color=\"danger\"\n                      onClick={() => this.removeFromCart(cartItem.product)}\n                    >\n                      X\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      removeFromCart: bindActionCreators(cartActions.removeFromCart, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDetail);\n","import React from \"react\";\n\nconst TextInput = ({ name, label, onChange, placeHolder, value, error }) => {\n  let wrapperClass = \"form-group\";\n  if (error && error.length > 0) {\n    wrapperClass += \"has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={name}>{label}</label>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          name={name}\n          className=\"form-control\"\n          placeholder={placeHolder}\n          value={value}\n          onChange={onChange}\n        ></input>\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\n\nconst SelectInput = ({\n  name,\n  label,\n  onChange,\n  defaultOption,\n  value,\n  error,\n  options,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select\n        name={name}\n        value={value}\n        onChange={onChange}\n        className=\"form-control\"\n      >\n        <option value=\"\">{defaultOption}</option>\n        {options.map((option) => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.text}\n            </option>\n          );\n        })}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default SelectInput;\n","import React from \"react\";\nimport TextInput from \"../toolbox/TextInput\";\nimport SelectInput from \"../toolbox/SelectInput\";\n\nconst ProductDetail = ({ categories, product, onSave, onChange, errors }) => {\n  return (\n    <form onSubmit={onSave}>\n      <h2>{product.id ? \"UPDATE\" : \"ADD NEW PRODUCT\"}</h2>\n      <TextInput\n        name=\"productName\"\n        label=\"Product Name\"\n        value={product.productName}\n        onChange={onChange}\n        error={errors.productName}\n      />\n\n      <SelectInput\n        name=\"categoryId\"\n        label=\"Category\"\n        value={product.categoryId || \"\"}\n        defaultOption=\"Please Select\"\n        options={categories.map((category) => ({\n          value: category.id,\n          text: category.categoryName,\n        }))}\n        onChange={onChange}\n        error={errors.categoryId}\n      />\n\n      <TextInput\n        name=\"unitPrice\"\n        label=\"Unit Price\"\n        value={product.unitPrice}\n        onChange={onChange}\n        error={errors.unitPrice}\n      />\n\n      <TextInput\n        name=\"quantityPerUnit\"\n        label=\"Quantity Per Unit\"\n        value={product.quantityPerUnit}\n        onChange={onChange}\n        error={errors.quantityPerUnit}\n      />\n\n      <TextInput\n        name=\"unitsInStock\"\n        label=\"Units In Stock\"\n        value={product.unitsInStock}\n        onChange={onChange}\n        error={errors.unitsInStock}\n      />\n\n      <button type=\"submit\" className=\"btn btn-success\">\n        SAVE\n      </button>\n    </form>\n  );\n};\n\nexport default ProductDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCategories } from \"../../redux/actions/categoryActions\";\nimport { saveProduct } from \"../../redux/actions/productActions\";\nimport ProductDetail from \"./ProductDetail\";\n\nfunction AddOrUpdateProduct({\n  products,\n  categories,\n  getProducts,\n  getCategories,\n  saveProduct,\n  history,\n  ...props\n}) {\n  const [product, setProduct] = useState({ ...props.product });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (categories.length === 0) {\n      getCategories();\n    }\n    setProduct({ ...props.product });\n  }, [props.product]);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setProduct((previousProduct) => ({\n      ...previousProduct,\n      [name]: name === \"categoryId\" ? parseInt(value, 10) : value,\n    }));\n\n    validate(name, value);\n  }\n\n  function validate(name, value) {\n    if (name === \"productName\" && value === \"\") {\n      setErrors((previousErrors) => ({\n        ...previousErrors,\n        productName: \"Should have a product name\",\n      }));\n    } else {\n      setErrors((previousErrors) => ({\n        ...previousErrors,\n        productName: \"\",\n      }));\n    }\n  }\n\n  function handleSave(event) {\n    event.preventDefault();\n    saveProduct(product).then(() => {\n      history.push(\"/\");\n    });\n  }\n\n  return (\n    <ProductDetail\n      product={product}\n      categories={categories}\n      onChange={handleChange}\n      onSave={handleSave}\n      errors={errors}\n    />\n  );\n}\n\nexport function getProductById(products, productId) {\n  let product = products.find((product) => product.id == productId) || null;\n  return product;\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const productId = ownProps.match.params.productId;\n  const product =\n    productId && state.products.length > 0\n      ? getProductById(state.products, productId)\n      : {};\n  return {\n    product,\n    products: state.products,\n    categories: state.categoriesArray,\n  };\n}\n\nconst mapDispatchToProps = {\n  getCategories,\n  saveProduct,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrUpdateProduct);\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"mt-5 text-center\">\n        <h2 className=\"my-5\">Page Not Found</h2>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport NavBar from \"../nav/NavBar\";\nimport Dashboard from \"../root/Dashboard\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CartDetail from \"../cart/CartDetail\";\nimport AddOrUpdateProduct from \"../products/AddOrUpdateProduct\";\nimport NotFound from \"../common/NotFound\";\n\nfunction App() {\n  return (\n    <Container className=\"p-2\">\n      <Row className=\"m-1\">\n        <NavBar></NavBar>\n      </Row>\n      <Row className=\"m-1\">\n        <Switch>\n          <Route path=\"/\" exact component={Dashboard}></Route>\n          <Route path=\"/products\" exact component={Dashboard}></Route>\n          <Route path=\"/cart\" exact component={CartDetail}></Route>\n          <Route\n            path=\"/saveproduct/:productId\"\n            component={AddOrUpdateProduct}\n          ></Route>\n          <Route path=\"/saveproduct/\" component={AddOrUpdateProduct}></Route>\n          <Route path=\"/online-store/\" exact component={Dashboard}></Route>\n          <Route\n            path=\"/online-store/products\"\n            exact\n            component={Dashboard}\n          ></Route>\n          <Route path=\"/online-store/cart\" exact component={CartDetail}></Route>\n          <Route\n            path=\"/online-store/saveproduct/:productId\"\n            component={AddOrUpdateProduct}\n          ></Route>\n          <Route\n            path=\"/online-store/saveproduct/\"\n            component={AddOrUpdateProduct}\n          ></Route>\n          <Route exact component={NotFound}></Route>\n        </Switch>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n  currentCategory: { categoryName: \"Empty\" },\n  categories: [],\n  products: [],\n  cart: [],\n  savedProduct: {},\n};\n","import { combineReducers } from \"redux\";\nimport changeCategoryReducer from \"./changeCategoryReducer\";\nimport categoryListReducer from \"./categoryListReducer\";\nimport productListReducer from \"./productListReducer\";\nimport cartReducer from \"./cartReducer\";\nimport saveProductReducer from \"./saveProductReducer\";\n\nconst rootReducer = combineReducers({\n  currentCategory: changeCategoryReducer,\n  categoriesArray: categoryListReducer,\n  products: productListReducer,\n  cart: cartReducer,\n  savedProduct: saveProductReducer,\n});\n\nexport default rootReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function changeCategoryReducer(\n  state = initialState.currentCategory,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.CHANGE_CATEGORY:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function categoryListReducer(\n  state = initialState.categories,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.GET_CATEGORIES_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function productListReducer(\n  state = initialState.products,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.GET_PRODUCTS_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function cartReducer(state = initialState.cart, action) {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      let addedItem = state.find(\n        (item) => item.product.id === action.payload.product.id\n      );\n      if (addedItem) {\n        const newState = state.map((cartItem) => {\n          if (cartItem.product.id === action.payload.product.id) {\n            return Object.assign({}, addedItem, {\n              quantity: addedItem.quantity + 1,\n            });\n          }\n          return cartItem;\n        });\n        return newState;\n      } else {\n        return [...state, { ...action.payload }];\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      const newState = state.filter(\n        (cartItem) => cartItem.product.id !== action.payload.id\n      );\n      return newState;\n\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { initialState } from \"./initialState\";\n\nexport default function saveProductReducer(\n  state = initialState.savedProduct,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.UPDATE_PRODUCT_SUCCESS:\n      return action.payload;\n    case actionTypes.CREATE_PRODUCT_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/root/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport \"../node_modules/reactstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/alertifyjs/build/css/alertify.min.css\";\nimport \"../node_modules/alertifyjs/build/alertify.min.js\";\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/reducers/configureStore\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport rootReducer from \"./index\";\nimport thunk from \"redux-thunk\";\n\nexport default function configureStore() {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n}\n"],"sourceRoot":""}