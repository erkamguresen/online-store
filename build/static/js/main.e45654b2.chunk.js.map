{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/cartActions.js","components/cart/CartSummary.js","components/nav/NavBar.js","redux/actions/categoryActions.js","redux/actions/productActions.js","components/categories/CategoryList.js","components/products/ProductList.js","components/root/Dashboard.js","components/cart/CartDetail.js","components/toolbox/TextInput.js","components/toolbox/SelectInput.js","components/products/ProductDetail.js","components/products/AddOrUpdateProduct.js","components/common/NotFound.js","components/root/App.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/changeCategoryReducer.js","redux/reducers/categoryListReducer.js","redux/reducers/productListReducer.js","redux/reducers/cartReducer.js","redux/reducers/saveProductReducer.js","index.js","redux/reducers/configureStore.js"],"names":["CHANGE_CATEGORY","GET_CATEGORIES_SUCCESS","GET_PRODUCTS_SUCCESS","CREATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_SUCCESS","ADD_TO_CART","REMOVE_FROM_CART","addToCart","cartItem","type","actionTypes","payload","removeFromCart","product","CartSummary","this","props","actions","alertify","error","productName","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","class","DropdownMenu","right","cart","map","DropdownItem","className","Badge","color","onClick","quantity","id","divider","to","length","renderSummary","renderEmpty","Component","connect","state","dispatch","bindActionCreators","cartActions","NavBar","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","changeCategory","category","getCategories","fetch","then","response","json","result","sort","a","b","createProductSuccess","updateProductSuccess","prodcut","getProducts","categoryId","url","handleResponse","ok","text","Error","handleError","CategoryList","ListGroup","ListGroupItem","active","currentCategory","selectCategory","categories","categoryName","categoriesArray","categoryActions","productActions","ProductList","success","Container","Table","products","scope","unitPrice","quantityPerUnit","unitsInStock","Button","Dashboard","Row","Col","xs","CartDetail","TextInput","name","label","onChange","placeHolder","value","wrapperClass","htmlFor","placeholder","SelectInput","defaultOption","options","option","ProductDetail","onSave","errors","onSubmit","mapDispatchToProps","saveProduct","parseInt","method","headers","body","JSON","stringify","catch","updateProductApi","savedProduct","insertNewProductApi","ownProps","productId","match","params","find","getProductById","history","setProduct","setErrors","useEffect","event","target","previousProduct","previousErrors","validate","preventDefault","push","NotFound","App","path","exact","component","AddOrUpdateProduct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","addedItem","item","newState","Object","assign","filter","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e45654b2.chunk.js","sourcesContent":["export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\r\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\r\n\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function addToCart(cartItem) {\r\n  return { type: actionTypes.ADD_TO_CART, payload: cartItem };\r\n}\r\n\r\nexport function removeFromCart(product) {\r\n  return { type: actionTypes.REMOVE_FROM_CART, payload: product };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as cartActions from \"../../redux/actions/cartActions\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nclass CartSummary extends Component {\r\n  removeFromCart(product) {\r\n    this.props.actions.removeFromCart(product);\r\n    alertify.error(product.productName + \" has been removed from the cart\");\r\n  }\r\n\r\n  renderEmpty() {\r\n    return (\r\n      <NavItem>\r\n        <NavLink>Your cart is empty</NavLink>\r\n      </NavItem>\r\n    );\r\n  }\r\n\r\n  renderSummary() {\r\n    return (\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Cart Details\r\n          <i class=\"fa fa-shopping-cart fs-4  text-primary ms-2\"></i>\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {this.props.cart.map((cartItem) => (\r\n            <DropdownItem\r\n              key={cartItem.product.id}\r\n              className=\"d-flex justify-content-between\"\r\n            >\r\n              <div>\r\n                <Badge\r\n                  color=\"danger\"\r\n                  className=\"bg-danger me-2\"\r\n                  onClick={() => this.removeFromCart(cartItem.product)}\r\n                >\r\n                  X\r\n                </Badge>\r\n                {cartItem.product.productName}\r\n              </div>\r\n              <Badge color=\"primary\" className=\"bg-primary\">\r\n                {cartItem.quantity}\r\n              </Badge>\r\n            </DropdownItem>\r\n          ))}\r\n\r\n          <DropdownItem divider />\r\n          <DropdownItem>\r\n            <Link to=\"/cart\">Go To The Cart</Link>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.cart.length > 0 ? this.renderSummary() : this.renderEmpty()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      removeFromCart: bindActionCreators(cartActions.removeFromCart, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartSummary);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport CartSummary from \"../cart/CartSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand>\r\n          <Link to=\"/online-store/\">Web Shop</Link>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link to=\"/saveproduct/\">Add Product</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <CartSummary></CartSummary>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import * as actionTypes from \"./actionTypes\";\r\n// import parseBJSON from \"../../logic/parseBJSON.js\";\r\n\r\nexport function changeCategory(category) {\r\n  return { type: actionTypes.CHANGE_CATEGORY, payload: category };\r\n}\r\n\r\nexport function getCategoriesSuccess(categories) {\r\n  return { type: actionTypes.GET_CATEGORIES_SUCCESS, payload: categories };\r\n}\r\n\r\nexport function getCategories() {\r\n  return function (dispatch) {\r\n    let url =\r\n      \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-categories/incoming_webhook/webhook-get-categories\";\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // const formattedData = parseBJSON(result);\r\n        // return dispatch(getCategoriesSuccess(formattedData));\r\n        result.sort((a, b) => a.id - b.id);\r\n        return dispatch(getCategoriesSuccess(result));\r\n      });\r\n  };\r\n}\r\n","import * as actionTypes from \"./actionTypes\";\r\n// import parseBJSON from \"../../logic/parseBJSON.js\";\r\n\r\nconst postDBHookUrl =\r\n  \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-products/incoming_webhook/insert-product\";\r\nconst updateDBHookUrl =\r\n  \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-products/incoming_webhook/webhook-update-product\";\r\n\r\nexport function getProductSuccess(products) {\r\n  return { type: actionTypes.GET_PRODUCTS_SUCCESS, payload: products };\r\n}\r\n\r\nexport function createProductSuccess(product) {\r\n  return { type: actionTypes.CREATE_PRODUCT_SUCCESS, payload: product };\r\n}\r\n\r\nexport function updateProductSuccess(prodcut) {\r\n  return { type: actionTypes.UPDATE_PRODUCT_SUCCESS, payload: prodcut };\r\n}\r\n\r\nexport function updateProductApi(product) {\r\n  return fetch(updateDBHookUrl, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(product),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function insertNewProductApi(product) {\r\n  return fetch(postDBHookUrl, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(product),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveProduct(product) {\r\n  product.unitPrice = parseInt(product.unitPrice);\r\n  product.unitsInStock = parseInt(product.unitsInStock);\r\n\r\n  if (product.id) {\r\n    return function (dispatch) {\r\n      return updateProductApi(product)\r\n        .then((savedProduct) => {\r\n          product.id\r\n            ? dispatch(updateProductSuccess(savedProduct))\r\n            : dispatch(createProductSuccess(savedProduct));\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    };\r\n  } else {\r\n    product.id = 666;\r\n    // getNewProductId();\r\n\r\n    return function (dispatch) {\r\n      return insertNewProductApi(product)\r\n        .then((savedProduct) => {\r\n          product.id\r\n            ? dispatch(updateProductSuccess(savedProduct))\r\n            : dispatch(createProductSuccess(savedProduct));\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n    };\r\n  }\r\n}\r\n\r\nexport function getProducts(categoryId) {\r\n  return function (dispatch) {\r\n    let url =\r\n      \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/online-shop-bwkwe/service/online-shop-products/incoming_webhook/webhook-get-products\";\r\n    if (categoryId) {\r\n      url += \"?categoryId=\" + categoryId;\r\n    }\r\n\r\n    return fetch(url)\r\n      .then((response) => {\r\n        let result = response.json();\r\n\r\n        return result;\r\n      })\r\n      .then((result) => {\r\n        // let formattedData = parseBJSON(result);\r\n\r\n        // if (categoryId) {\r\n        //   formattedData = formattedData.filter(\r\n        //     (product) => product.categoryId === categoryId\r\n        //   );\r\n        // }\r\n\r\n        // return dispatch(getProductSuccess(formattedData));\r\n\r\n        result.sort((a, b) => a.id - b.id);\r\n\r\n        return dispatch(getProductSuccess(result));\r\n      });\r\n  };\r\n}\r\n\r\nexport async function handleResponse(response) {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n\r\n  const error = await response.text();\r\n  throw new Error(error);\r\n}\r\n\r\nexport function handleError(error) {\r\n  throw error;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Badge, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\r\nimport * as productActions from \"../../redux/actions/productActions\";\r\n\r\nclass CategoryList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n    // console.log(this.props.categories);\r\n  }\r\n\r\n  selectCategory(category) {\r\n    this.props.actions.changeCategory(category);\r\n    if (category !== \"\") {\r\n      this.props.actions.getProducts(category.id);\r\n    } else {\r\n      this.props.actions.getProducts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-1\">\r\n        <h3>\r\n          <Badge className=\"badge bg-warning text-dark\">Categories</Badge>\r\n        </h3>\r\n        <ListGroup>\r\n          <ListGroupItem\r\n            active={this.props.currentCategory === \"\" || undefined || null}\r\n            onClick={() => this.selectCategory(\"\")}\r\n            key={-1}\r\n          >\r\n            All Categories\r\n          </ListGroupItem>\r\n          {this.props.categories.map((category) => (\r\n            <ListGroupItem\r\n              active={category.id === this.props.currentCategory.id}\r\n              onClick={() => this.selectCategory(category)}\r\n              key={category.id}\r\n            >\r\n              {category.categoryName}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentCategory: state.currentCategory,\r\n    categories: state.categoriesArray,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(\r\n        categoryActions.getCategories,\r\n        dispatch\r\n      ),\r\n      changeCategory: bindActionCreators(\r\n        categoryActions.changeCategory,\r\n        dispatch\r\n      ),\r\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Badge, Button, Container, Table } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as productActions from \"../../redux/actions/productActions\";\r\nimport * as cartActions from \"../../redux/actions/cartActions\";\r\nimport alertify from \"alertifyjs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProductList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getProducts();\r\n  }\r\n\r\n  addToCart = (product) => {\r\n    this.props.actions.addToCart({ quantity: 1, product });\r\n    alertify.success(product.productName + \" has been added to cart\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"m-1 \">\r\n        <h3>\r\n          <Badge color=\"warning\" className=\"badge bg-warning text-dark me-3\">\r\n            Products\r\n          </Badge>\r\n          <Badge color=\"success\" className=\"badge bg-success\">\r\n            {this.props.currentCategory.categoryName}\r\n          </Badge>\r\n        </h3>\r\n\r\n        <div className=\"\">\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Product Name</th>\r\n                <th>Unit Price</th>\r\n                <th>Quantity Per Unit</th>\r\n                <th>Units In Stock</th>\r\n                <th>Add to Cart</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.products.map((product) => (\r\n                <tr key={product.id}>\r\n                  <th scope=\"row\">{product.id}</th>\r\n                  <td>\r\n                    <Link to={\"/saveproduct/\" + product.id}>\r\n                      {product.productName}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{product.unitPrice}</td>\r\n                  <td>{product.quantityPerUnit}</td>\r\n                  <td>{product.unitsInStock}</td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => this.addToCart(product)}\r\n                    >\r\n                      +\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentCategory: state.currentCategory,\r\n    products: state.products,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\r\n      addToCart: bindActionCreators(cartActions.addToCart, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport CategoryList from \"../categories/CategoryList\";\r\nimport ProductList from \"../products/ProductList\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"3\">\r\n            <CategoryList></CategoryList>\r\n          </Col>\r\n          <Col xs=\"9\">\r\n            <ProductList></ProductList>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport alertify from \"alertifyjs\";\r\nimport * as cartActions from \"../../redux/actions/cartActions\";\r\n\r\nclass CartDetail extends Component {\r\n  removeFromCart(product) {\r\n    this.props.actions.removeFromCart(product);\r\n    alertify.error(product.productName + \" has been removed from the cart\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Your Cart</h1>\r\n        <div className=\"\">\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Product Name</th>\r\n                <th>Unit Price</th>\r\n                <th>Quantity </th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.cart.map((cartItem) => (\r\n                <tr key={cartItem.id}>\r\n                  <th scope=\"row\">{cartItem.product.id}</th>\r\n                  <td>{cartItem.product.productName}</td>\r\n                  <td>{cartItem.product.unitPrice}</td>\r\n                  <td>{cartItem.quantity}</td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={() => this.removeFromCart(cartItem.product)}\r\n                    >\r\n                      X\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      removeFromCart: bindActionCreators(cartActions.removeFromCart, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDetail);\r\n","import React from \"react\";\r\n\r\nconst TextInput = ({ name, label, onChange, placeHolder, value, error }) => {\r\n  let wrapperClass = \"form-group\";\r\n  if (error && error.length > 0) {\r\n    wrapperClass += \"has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          type=\"text\"\r\n          name={name}\r\n          className=\"form-control\"\r\n          placeholder={placeHolder}\r\n          value={value}\r\n          onChange={onChange}\r\n        ></input>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\n\r\nconst SelectInput = ({\r\n  name,\r\n  label,\r\n  onChange,\r\n  defaultOption,\r\n  value,\r\n  error,\r\n  options,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"form-control\"\r\n      >\r\n        <option value=\"\">{defaultOption}</option>\r\n        {options.map((option) => {\r\n          return (\r\n            <option key={option.value} value={option.value}>\r\n              {option.text}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport TextInput from \"../toolbox/TextInput\";\r\nimport SelectInput from \"../toolbox/SelectInput\";\r\n\r\nconst ProductDetail = ({ categories, product, onSave, onChange, errors }) => {\r\n  return (\r\n    <form onSubmit={onSave}>\r\n      <h2>{product.id ? \"UPDATE\" : \"ADD NEW PRODUCT\"}</h2>\r\n      <TextInput\r\n        name=\"productName\"\r\n        label=\"Product Name\"\r\n        value={product.productName}\r\n        onChange={onChange}\r\n        error={errors.productName}\r\n      />\r\n\r\n      <SelectInput\r\n        name=\"categoryId\"\r\n        label=\"Category\"\r\n        value={product.categoryId || \"\"}\r\n        defaultOption=\"Please Select\"\r\n        options={categories.map((category) => ({\r\n          value: category.id,\r\n          text: category.categoryName,\r\n        }))}\r\n        onChange={onChange}\r\n        error={errors.categoryId}\r\n      />\r\n\r\n      <TextInput\r\n        name=\"unitPrice\"\r\n        label=\"Unit Price\"\r\n        value={product.unitPrice}\r\n        onChange={onChange}\r\n        error={errors.unitPrice}\r\n      />\r\n\r\n      <TextInput\r\n        name=\"quantityPerUnit\"\r\n        label=\"Quantity Per Unit\"\r\n        value={product.quantityPerUnit}\r\n        onChange={onChange}\r\n        error={errors.quantityPerUnit}\r\n      />\r\n\r\n      <TextInput\r\n        name=\"unitsInStock\"\r\n        label=\"Units In Stock\"\r\n        value={product.unitsInStock}\r\n        onChange={onChange}\r\n        error={errors.unitsInStock}\r\n      />\r\n\r\n      <button type=\"submit\" className=\"btn btn-success\">\r\n        SAVE\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCategories } from \"../../redux/actions/categoryActions\";\r\nimport { saveProduct } from \"../../redux/actions/productActions\";\r\nimport ProductDetail from \"./ProductDetail\";\r\n\r\nfunction AddOrUpdateProduct({\r\n  products,\r\n  categories,\r\n  getProducts,\r\n  getCategories,\r\n  saveProduct,\r\n  history,\r\n  ...props\r\n}) {\r\n  const [product, setProduct] = useState({ ...props.product });\r\n  const [errors, setErrors] = useState({});\r\n  useEffect(() => {\r\n    if (categories.length === 0) {\r\n      getCategories();\r\n    }\r\n    setProduct({ ...props.product });\r\n  }, [props.product]);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setProduct((previousProduct) => ({\r\n      ...previousProduct,\r\n      [name]: name === \"categoryId\" ? parseInt(value, 10) : value,\r\n    }));\r\n\r\n    validate(name, value);\r\n  }\r\n\r\n  function validate(name, value) {\r\n    if (name === \"productName\" && value === \"\") {\r\n      setErrors((previousErrors) => ({\r\n        ...previousErrors,\r\n        productName: \"Should have a product name\",\r\n      }));\r\n    } else {\r\n      setErrors((previousErrors) => ({\r\n        ...previousErrors,\r\n        productName: \"\",\r\n      }));\r\n    }\r\n  }\r\n\r\n  function handleSave(event) {\r\n    event.preventDefault();\r\n    saveProduct(product).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ProductDetail\r\n      product={product}\r\n      categories={categories}\r\n      onChange={handleChange}\r\n      onSave={handleSave}\r\n      errors={errors}\r\n    />\r\n  );\r\n}\r\n\r\nexport function getProductById(products, productId) {\r\n  let product = products.find((product) => product.id == productId) || null;\r\n  return product;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const productId = ownProps.match.params.productId;\r\n  const product =\r\n    productId && state.products.length > 0\r\n      ? getProductById(state.products, productId)\r\n      : {};\r\n  return {\r\n    product,\r\n    products: state.products,\r\n    categories: state.categoriesArray,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCategories,\r\n  saveProduct,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrUpdateProduct);\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"mt-5 text-center\">\r\n        <h2 className=\"my-5\">Page Not Found</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"reactstrap\";\r\nimport NavBar from \"../nav/NavBar\";\r\nimport Dashboard from \"../root/Dashboard\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CartDetail from \"../cart/CartDetail\";\r\nimport AddOrUpdateProduct from \"../products/AddOrUpdateProduct\";\r\nimport NotFound from \"../common/NotFound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container className=\"p-2\">\r\n      <Row className=\"m-1\">\r\n        <NavBar></NavBar>\r\n      </Row>\r\n      <Row className=\"m-1\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Dashboard}></Route>\r\n          <Route path=\"/online-store/\" exact component={Dashboard}></Route>\r\n          <Route path=\"/products\" exact component={Dashboard}></Route>\r\n          <Route path=\"/cart\" exact component={CartDetail}></Route>\r\n          <Route\r\n            path=\"/saveproduct/:productId\"\r\n            component={AddOrUpdateProduct}\r\n          ></Route>\r\n          <Route path=\"/saveproduct/\" component={AddOrUpdateProduct}></Route>\r\n          <Route exact component={NotFound}></Route>\r\n        </Switch>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const initialState = {\r\n  currentCategory: { categoryName: \"Empty\" },\r\n  categories: [],\r\n  products: [],\r\n  cart: [],\r\n  savedProduct: {},\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport changeCategoryReducer from \"./changeCategoryReducer\";\r\nimport categoryListReducer from \"./categoryListReducer\";\r\nimport productListReducer from \"./productListReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport saveProductReducer from \"./saveProductReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  currentCategory: changeCategoryReducer,\r\n  categoriesArray: categoryListReducer,\r\n  products: productListReducer,\r\n  cart: cartReducer,\r\n  savedProduct: saveProductReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nexport default function changeCategoryReducer(\r\n  state = initialState.currentCategory,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.CHANGE_CATEGORY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nexport default function categoryListReducer(\r\n  state = initialState.categories,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CATEGORIES_SUCCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nexport default function productListReducer(\r\n  state = initialState.products,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS_SUCCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nexport default function cartReducer(state = initialState.cart, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      let addedItem = state.find(\r\n        (item) => item.product.id === action.payload.product.id\r\n      );\r\n      if (addedItem) {\r\n        const newState = state.map((cartItem) => {\r\n          if (cartItem.product.id === action.payload.product.id) {\r\n            return Object.assign({}, addedItem, {\r\n              quantity: addedItem.quantity + 1,\r\n            });\r\n          }\r\n          return cartItem;\r\n        });\r\n        return newState;\r\n      } else {\r\n        return [...state, { ...action.payload }];\r\n      }\r\n\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      const newState = state.filter(\r\n        (cartItem) => cartItem.product.id !== action.payload.id\r\n      );\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nexport default function saveProductReducer(\r\n  state = initialState.savedProduct,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.UPDATE_PRODUCT_SUCCESS:\r\n      return action.payload;\r\n    case actionTypes.CREATE_PRODUCT_SUCCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/root/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\r\nimport \"../node_modules/reactstrap\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/alertifyjs/build/css/alertify.min.css\";\r\nimport \"../node_modules/alertifyjs/build/alertify.min\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./redux/reducers/configureStore\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport rootReducer from \"./index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore() {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n}\r\n"],"sourceRoot":""}